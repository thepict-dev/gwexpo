<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pict_admin.service.impl.PictMapper">
	
	<select id="board_list" resultType="pictVO">
		select * from board_table
		<if test="search_text != null and search_text != '' ">
			where (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by reg_date desc
	</select>
	
	<select id="board_list_one" resultType="pictVO">
		select * from board_table
		where idx = #{idx}
	</select>
	
	<insert id="board_insert" parameterType="pictVO">
		INSERT INTO board_table
			(
			 title, text, img_url, file_url1, file_url2, file_url3, reg_date
			)
		VALUES (
			 #{title}, #{text}, #{img_url}, #{file_url1}, #{file_url2}, #{file_url3}, now()
			  ) 
	</insert>
	
	<update id="board_update" parameterType="pictVO">
		update board_table
		set title =#{title}, text=#{text}, reg_date = now()
		<if test="img_url != null and img_url != '' ">
			, img_url = #{img_url}
		</if>
		
		<if test="file_url1 != null and file_url1 != '' ">
			, file_url1 = #{file_url1}
		</if>
		<if test="file_url2 != null and file_url2 != '' ">
			, file_url2 = #{file_url2}
		</if>
		<if test="file_url3 != null and file_url3 != '' ">
			, file_url3 = #{file_url3}
		</if>
		where idx = #{idx}
	</update>
	
	<delete id="board_delete" parameterType="pictVO">
		delete from board_table where idx = #{idx}
	</delete>
	
	<insert id="company_insert" parameterType="pictVO">
		INSERT INTO company_table
			(
			 	title,
				establishment_date,
				biz_num,
				ceo,
				address,
				file_url,
				name,
				depart,
				mobile,
				email,
				industry,
				joins,
				booth,
				etc,
				reg_date
			)
		VALUES (
			 #{title}, #{establishment_date}, #{biz_num}, #{ceo}, #{address}, #{file_url}, #{name}, #{depart}, #{mobile}, #{email}, #{industry}, #{joins}, #{booth}, #{etc}, now()
			  ) 
	</insert>
	
	
	<select id="company_list" resultType="pictVO">
		select * from company_table
		<if test="search_text != null and search_text != '' ">
			where (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by reg_date desc
	</select>
	
	<select id="company_list_one" resultType="pictVO">
		select * from company_table
		where idx = #{idx}
	</select>
	
	<delete id="company_delete" parameterType="pictVO">
		delete from company_table where idx = #{idx}
	</delete>
	
	<update id="company_update" parameterType="pictVO">
		update company_table
		set title =#{title}, establishment_date=#{establishment_date}, biz_num=#{biz_num}, ceo=#{ceo}, address=#{address}
		, name=#{name}, depart=#{depart}, mobile=#{mobile}, email=#{email}
		, industry=#{industry}, joins=#{joins}, booth=#{booth}, etc=#{etc}
		<if test="file_url != null and file_url != '' ">
			, file_url =#{file_url}
		</if>
		, reg_date = now()
		where idx = #{idx}
	</update>
	
	
	<!-- GSF 펀딩 추가 -->
	
	<select id="funding_list_company_api" resultType="pictVO">
		select c.title, truncate(sum(i.point), 0) as point
		from invest_table i 
		left outer join user_table u on i.user_id = u.idx
		left outer join company_table c on c.idx = i.company_id
		group by i.company_id
		order by point desc, title asc
		<!-- limit 10 offset 0 -->
	</select>
	
	<select id="total_invest" resultType="pictVO">
		select sum(point) as point from invest_table
	</select>
	
	<select id="invest_user_info" resultType="pictVO">
		select * from user_table
		where name = #{name} and mobile =#{mobile}
	</select>
	
	<select id="maximum_price" resultType="pictVO">
		select maximum from count_table where idx =2 limit 1
	</select>
	
	<insert id="invest_insert" parameterType="pictVO">
		INSERT INTO invest_table
			(
			 company_id, user_id, point, reg_date
			)
		VALUES (
			 #{company_id}, #{idx}, #{point}, now()
			  ) 
	</insert>
	
	<update id="user_invest_minus" parameterType="pictVO">
		update user_table
		set point = point - #{point}
		where idx = #{idx}
	</update>
	
	<select id="funding_mypage_list" resultType="pictVO">
		select
		   t.*
		from
		(
		   select 
		      row_number() over(order by sum(i.point) desc, c.title asc) as rnum, c.idx, c.title, ifnull(sum(i.point), 0) as point
		   from company_table c
		    left outer join invest_table i on i.company_id = c.idx
		    group by c.idx
		) t
		where t.idx in
		(
		   select a.company_id from invest_table a where a.user_id = #{idx} group by a.company_id
		)
		order by t.rnum asc;
	</select>
	
	<select id="funding_list_user_star" resultType="pictVO">
		select c.title, any_value(i.point) as point, u.name
		from invest_table i 
		left outer join user_table u on i.user_id = u.idx
		left outer join company_table c on c.idx = i.company_id
		where u.idx = #{idx}
		<if test="group_by != null and group_by != '' ">
			group by i.company_id
			order by point desc 
		</if>
	</select>
	
	<!-- 회사별 사람들 투자 현황 -->
	<select id="funding_list_user" resultType="pictVO">
		select u.name, i.point
		from invest_table i 
		left outer join user_table u on i.user_id = u.idx
		left outer join company_table c on c.idx = i.company_id
		where i.company_id = #{company_id}
	</select>
	
	<!-- 회사 총 투자현황 -->
	<select id="funding_list_company" resultType="pictVO">
		select c.title, truncate(sum(i.point), 0) as point
		from invest_table i 
		left outer join user_table u on i.user_id = u.idx
		left outer join company_table c on c.idx = i.company_id
		group by i.company_id
		order by point desc
	</select>
	
	
	
	<!-- 참가자관리 -->
	<select id="user_list" resultType="pictVO">
		select *
		from user_table where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				name LIKE CONCAT('%', #{search_text}, '%') or
				mobile LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
	</select>
	
	<select id="user_list_one" resultType="pictVO">
		select * from user_table
		where idx = #{idx}
	</select>
	
	<insert id="user_insert" parameterType="pictVO">
		INSERT INTO user_table
			(
			 name, gender, mobile, email, classify, company, company_depart, company_rank, point, fairpath_id, reg_date
			)
		VALUES (
			 #{name}, #{gender}, #{mobile}, #{email}, #{classify}, #{company}, #{company_depart}, #{company_rank}, #{point}, #{fairpath_id}, now()
			  ) 
	</insert>
	
	<update id="user_update" parameterType="pictVO">
		update user_table
		set 
		name =#{name},
		gender =#{gender},
		mobile =#{mobile},
		email =#{email},
		classify =#{classify},
		company =#{company},
		company_depart =#{company_depart},
		company_rank =#{company_rank},
		fairpath_id =#{fairpath_id},
		reg_date = now()
		where idx = #{idx}
	</update>
	
	<delete id="user_delete" parameterType="pictVO">
		delete from user_table where idx = #{idx}
	</delete>
	
	
</mapper>